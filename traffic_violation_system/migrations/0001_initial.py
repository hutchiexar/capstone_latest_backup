# Generated by Django 5.1.6 on 2025-04-09 05:33

import django.db.models.deletion
import django.utils.timezone
import traffic_violation_system.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OperatorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Operator Type',
                'verbose_name_plural': 'Operator Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('general', 'General'), ('violation', 'Violation'), ('user', 'User'), ('payment', 'Payment'), ('system', 'System')], default='general', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], default='MEDIUM', max_length=20)),
                ('category', models.CharField(choices=[('GENERAL', 'General'), ('POLICY', 'Policy Update'), ('SYSTEM', 'System Update'), ('EMERGENCY', 'Emergency'), ('EVENT', 'Event')], default='GENERAL', max_length=20)),
                ('target_audience', models.CharField(choices=[('ALL', 'All Users'), ('ADMIN', 'Administrators'), ('ENFORCER', 'Traffic Enforcers'), ('SUPERVISOR', 'Supervisors'), ('TREASURER', 'Treasurers'), ('CLERK', 'Office Clerks'), ('USER', 'Regular Users')], default='ALL', max_length=20)),
                ('is_popup', models.BooleanField(default=False)),
                ('requires_acknowledgment', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('geographic_area', models.CharField(blank=True, max_length=255, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(db_index=True, max_length=100)),
                ('first_name', models.CharField(db_index=True, max_length=100)),
                ('middle_initial', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField()),
                ('old_pd_number', models.CharField(blank=True, max_length=50, null=True)),
                ('new_pd_number', models.CharField(max_length=50, unique=True)),
                ('po_number', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Permit Operator Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operator_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Operator',
                'verbose_name_plural': 'Operators',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_initial', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField()),
                ('old_pd_number', models.CharField(blank=True, max_length=20, null=True)),
                ('new_pd_number', models.CharField(max_length=20, unique=True)),
                ('license_number', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drivers', to='traffic_violation_system.operator')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='OperatorApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_permit', models.FileField(upload_to='permits/')),
                ('police_clearance', models.FileField(blank=True, help_text='Police clearance certificate', null=True, upload_to='police_clearance/')),
                ('barangay_certificate', models.FileField(blank=True, help_text='Barangay certificate', null=True, upload_to='barangay_certificate/')),
                ('cedula', models.FileField(blank=True, help_text='Community Tax Certificate (Cedula)', null=True, upload_to='cedula/')),
                ('cenro_tickets', models.FileField(blank=True, help_text='CENRO permits/tickets', null=True, upload_to='cenro_tickets/')),
                ('mayors_permit', models.FileField(blank=True, null=True, upload_to='mayors_permits/')),
                ('other_documents', models.FileField(blank=True, null=True, upload_to='operator_docs/')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_applications', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operator_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Operator Application',
                'verbose_name_plural': 'Operator Applications',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='OperatorViolationLookup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator_license', models.CharField(max_length=20)),
                ('operator_name', models.CharField(max_length=200)),
                ('lookup_date', models.DateTimeField(auto_now_add=True)),
                ('vehicle_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operator_lookups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-lookup_date'],
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('VIOLATION', 'New Violation'), ('PAYMENT', 'Payment Reminder'), ('STATUS', 'Status Update'), ('SYSTEM', 'System Notification')], max_length=20)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reference_id', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enforcer_id', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('phone_number', models.CharField(max_length=15)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField()),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('ENFORCER', 'Traffic Enforcer'), ('SUPERVISOR', 'Supervisor'), ('TREASURER', 'Treasurer'), ('CLERK', 'Office Clerk'), ('USER', 'Regular User')], default='USER', max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_location_update', models.DateTimeField(blank=True, null=True)),
                ('is_active_duty', models.BooleanField(default=False)),
                ('license_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_operator', models.BooleanField(default=False)),
                ('operator_since', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('heading', models.FloatField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('is_active_duty', models.BooleanField(default=True)),
                ('battery_level', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device_info', models.JSONField(blank=True, null=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to='traffic_violation_system.userprofile')),
            ],
            options={
                'verbose_name': 'Location History',
                'verbose_name_plural': 'Location Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('COMPLAINT', 'Traffic Complaint'), ('SUGGESTION', 'Improvement Suggestion'), ('INQUIRY', 'General Inquiry'), ('DISPUTE', 'Violation Dispute')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('incident_date', models.DateTimeField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_reports', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_pd_number', models.CharField(blank=True, max_length=50, null=True)),
                ('new_pd_number', models.CharField(max_length=50, unique=True)),
                ('vehicle_type', models.CharField(choices=[('Jeepney', 'Jeepney'), ('Tricycle', 'Tricycle'), ('Taxi', 'Taxi'), ('Bus', 'Bus'), ('Van', 'Van'), ('Other', 'Other')], default='Tricycle', max_length=100)),
                ('plate_number', models.CharField(blank=True, max_length=20, null=True)),
                ('engine_number', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_number', models.CharField(blank=True, max_length=50, null=True)),
                ('capacity', models.PositiveIntegerField(default=4)),
                ('year_model', models.CharField(blank=True, max_length=4, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic_violation_system.operator')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['operator__last_name', 'operator__first_name', 'new_pd_number'],
            },
        ),
        migrations.CreateModel(
            name='DriverVehicleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_assignments', to='traffic_violation_system.driver')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_assignments', to='traffic_violation_system.vehicle')),
            ],
            options={
                'verbose_name': 'Driver-Vehicle Assignment',
                'verbose_name_plural': 'Driver-Vehicle Assignments',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='VehicleRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('or_number', models.CharField(max_length=50, unique=True)),
                ('cr_number', models.CharField(max_length=50, unique=True)),
                ('plate_number', models.CharField(max_length=20, unique=True)),
                ('vehicle_type', models.CharField(max_length=100)),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('year_model', models.CharField(max_length=4)),
                ('color', models.CharField(max_length=50)),
                ('classification', models.CharField(choices=[('Private', 'Private'), ('Public', 'Public'), ('Government', 'Government'), ('Commercial', 'Commercial')], max_length=20)),
                ('registration_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('or_cr_image', models.ImageField(upload_to='or_cr_images/')),
                ('capacity', models.PositiveIntegerField(default=4)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_vehicles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Violation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('novr_number', models.CharField(blank=True, max_length=50, null=True)),
                ('pin_number', models.CharField(blank=True, max_length=50, null=True)),
                ('pd_number', models.CharField(blank=True, max_length=50, null=True)),
                ('driver_photo', models.ImageField(blank=True, null=True, upload_to='driver_photos/')),
                ('driver_address', models.TextField(blank=True, null=True)),
                ('potpot_number', models.CharField(blank=True, max_length=50, null=True)),
                ('operator_address', models.TextField(blank=True, null=True)),
                ('street_name', models.CharField(blank=True, max_length=200, null=True)),
                ('landmark', models.CharField(blank=True, max_length=200, null=True)),
                ('violation_code', models.CharField(blank=True, max_length=10, null=True)),
                ('violation_time', models.TimeField(blank=True, null=True)),
                ('vehicle_photo', models.ImageField(blank=True, null=True, upload_to='vehicle_photos/')),
                ('secondary_photo', models.ImageField(blank=True, null=True, upload_to='secondary_photos/')),
                ('violation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.CharField(max_length=200)),
                ('violation_type', models.CharField(choices=[('Illegal Parking', 'Illegal Parking (DTS)'), ('Entering Prohibited Zones', 'Entering Prohibited Zones'), ('Obstruction', 'Obstruction'), ('Unlicensed Driver', 'Unlicensed Driver'), ('Permitting Hitching', 'Permitting Hitching/Over Loading Passenger(s)'), ('Unregistered MV', 'Unregistered MV'), ('Refusal to Convey', 'Refusal to convey to proper destination'), ('Discourteous Driver', 'Discourteous driver/Conduct'), ('Defective Lights', 'No/Defective Lights'), ('Expired OR/CR', 'Expired OR/CR'), ('No License', 'Failure to Carry DL'), ('No Permit', "No MAYOR'S PERMIT/MTOP/POP/PDP"), ('Overcharging', 'Overcharging'), ('DUI', 'Driving under the influence of liquor/drugs'), ('Defective Muffler', 'Operating a vehicle with Defective Muffler'), ('Dilapidated', 'Operating a Dilapidated Motorcab'), ('Reckless Driving', 'Reckless Driving'), ('Others', 'Others')], max_length=100)),
                ('fine_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_tdz_violation', models.BooleanField(default=False, help_text='Whether the violation occurred in a Traffic Discipline Zone, which doubles the fine')),
                ('image', models.ImageField(blank=True, null=True, upload_to=traffic_violation_system.models.get_ncap_image_path)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ADJUDICATED', 'Adjudicated'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('PAID', 'Paid'), ('SETTLED', 'Settled'), ('OVERDUE', 'Overdue')], default='PENDING', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('payment_due_date', models.DateField(blank=True, null=True)),
                ('enforcer_signature_date', models.DateTimeField(blank=True, null=True)),
                ('violator_signature', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('violator_signature_date', models.DateTimeField(blank=True, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Type/Make of Vehicle')),
                ('classification', models.CharField(blank=True, choices=[('Private', 'Private'), ('Public', 'Public'), ('Government', 'Government'), ('Commercial', 'Commercial')], max_length=20, null=True)),
                ('plate_number', models.CharField(blank=True, max_length=20, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('vehicle_owner', models.CharField(blank=True, max_length=200, null=True)),
                ('vehicle_owner_address', models.TextField(blank=True, null=True)),
                ('violation_types', models.TextField(default='[]')),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('receipt_date', models.DateField(blank=True, null=True)),
                ('payment_remarks', models.TextField(blank=True, null=True)),
                ('adjudication_date', models.DateTimeField(blank=True, null=True)),
                ('adjudication_remarks', models.TextField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('adjudicated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adjudicated_violations', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_violations', to=settings.AUTH_USER_MODEL)),
                ('enforcer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_violations', to=settings.AUTH_USER_MODEL)),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='violations', to='traffic_violation_system.operator')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, help_text='If the violator is a registered user, link violation to their account', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_violations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-violation_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(max_length=50)),
                ('transaction_id', models.CharField(max_length=100)),
                ('violation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='traffic_violation_system.violation')),
            ],
        ),
        migrations.CreateModel(
            name='ViolationCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operations_officer', models.CharField(blank=True, max_length=100, null=True)),
                ('ctm_officer', models.CharField(blank=True, max_length=100, null=True)),
                ('certificate_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('violation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='certificate', to='traffic_violation_system.violation')),
            ],
        ),
        migrations.CreateModel(
            name='Violator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('license_number', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['first_name', 'last_name'], name='traffic_vio_first_n_996db7_idx'), models.Index(fields=['license_number'], name='traffic_vio_license_226d94_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('license_number__isnull', False), models.Q(('license_number', ''), _negated=True)), fields=('license_number',), name='unique_non_empty_license')],
            },
        ),
        migrations.AddField(
            model_name='violation',
            name='violator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='traffic_violation_system.violator'),
        ),
        migrations.CreateModel(
            name='AnnouncementAcknowledgment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acknowledged_at', models.DateTimeField(auto_now_add=True)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic_violation_system.announcement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Announcement Acknowledgment',
                'verbose_name_plural': 'Announcement Acknowledgments',
                'unique_together': {('announcement', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='operator',
            index=models.Index(fields=['last_name', 'first_name'], name='traffic_vio_last_na_e862e8_idx'),
        ),
        migrations.AddIndex(
            model_name='operator',
            index=models.Index(fields=['new_pd_number'], name='traffic_vio_new_pd__d09a92_idx'),
        ),
        migrations.AddIndex(
            model_name='locationhistory',
            index=models.Index(fields=['timestamp'], name='traffic_vio_timesta_fc503a_idx'),
        ),
        migrations.AddIndex(
            model_name='locationhistory',
            index=models.Index(fields=['user_profile', 'timestamp'], name='traffic_vio_user_pr_d8865a_idx'),
        ),
    ]
