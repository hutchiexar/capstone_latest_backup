# Generated by Django 5.1.5 on 2025-01-24 08:22

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('general', 'General'), ('violation', 'Violation'), ('user', 'User'), ('payment', 'Payment'), ('system', 'System')], default='general', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], default='MEDIUM', max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('VIOLATION', 'New Violation'), ('PAYMENT', 'Payment Reminder'), ('STATUS', 'Status Update'), ('SYSTEM', 'System Notification')], max_length=20)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reference_id', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enforcer_id', models.CharField(max_length=10, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('ENFORCER', 'Traffic Enforcer'), ('SUPERVISOR', 'Supervisor'), ('TREASURER', 'Treasurer'), ('CLERK', 'Office Clerk')], default='ENFORCER', max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_location_update', models.DateTimeField(blank=True, null=True)),
                ('is_active_duty', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('COMPLAINT', 'Traffic Complaint'), ('SUGGESTION', 'Improvement Suggestion'), ('INQUIRY', 'General Inquiry'), ('DISPUTE', 'Violation Dispute')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('incident_date', models.DateTimeField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_reports', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Violation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('violation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.CharField(max_length=200)),
                ('violation_type', models.CharField(choices=[('Illegal Parking', 'Illegal Parking (DTS)'), ('Entering Prohibited Zones', 'Entering Prohibited Zones'), ('Obstruction', 'Obstruction'), ('Unlicensed Driver', 'Unlicensed Driver'), ('Permitting Hitching', 'Permitting Hitching/Over Loading Passenger(s)'), ('Unregistered MV', 'Unregistered MV'), ('Refusal to Convey', 'Refusal to convey to proper destination'), ('Discourteous Driver', 'Discourteous driver/Conduct'), ('Defective Lights', 'No/Defective Lights'), ('Expired OR/CR', 'Expired OR/CR'), ('No License', 'Failure to Carry DL'), ('No Permit', "No MAYOR'S PERMIT/MTOP/POP/PDP"), ('Overcharging', 'Overcharging'), ('DUI', 'Driving under the influence of liquor/drugs'), ('Defective Muffler', 'Operating a vehicle with Defective Muffler'), ('Dilapidated', 'Operating a Dilapidated Motorcab'), ('Reckless Driving', 'Reckless Driving'), ('Others', 'Others')], max_length=100)),
                ('fine_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='violations/')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ADJUDICATED', 'Adjudicated'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('PAID', 'Paid'), ('SETTLED', 'Settled'), ('OVERDUE', 'Overdue')], default='PENDING', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('payment_due_date', models.DateField(blank=True, null=True)),
                ('enforcer_signature_date', models.DateTimeField(blank=True, null=True)),
                ('violator_signature', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('violator_signature_date', models.DateTimeField(blank=True, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Type/Make of Vehicle')),
                ('classification', models.CharField(blank=True, choices=[('Private', 'Private'), ('Public', 'Public'), ('Government', 'Government'), ('Commercial', 'Commercial')], max_length=20, null=True)),
                ('plate_number', models.CharField(blank=True, max_length=20, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('vehicle_owner', models.CharField(blank=True, max_length=200, null=True)),
                ('vehicle_owner_address', models.TextField(blank=True, null=True)),
                ('violation_types', models.TextField(default='[]')),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('receipt_date', models.DateField(blank=True, null=True)),
                ('payment_remarks', models.TextField(blank=True, null=True)),
                ('adjudication_date', models.DateTimeField(blank=True, null=True)),
                ('adjudication_remarks', models.TextField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('adjudicated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adjudicated_violations', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_violations', to=settings.AUTH_USER_MODEL)),
                ('enforcer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_violations', to=settings.AUTH_USER_MODEL)),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-violation_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(max_length=50)),
                ('transaction_id', models.CharField(max_length=100)),
                ('violation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='traffic_violation_system.violation')),
            ],
        ),
        migrations.CreateModel(
            name='Violator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('license_number', models.CharField(max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('license_number',)},
            },
        ),
        migrations.AddField(
            model_name='violation',
            name='violator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic_violation_system.violator'),
        ),
    ]
